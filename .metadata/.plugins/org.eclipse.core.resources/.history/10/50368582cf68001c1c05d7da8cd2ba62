import java.awt.Point;


public class BackTracking {

	private int NR_OF_QUEENS=4;
	private Point[] queens = new Point[NR_OF_QUEENS];
	private boolean placeQueen(int n) {
		// stop condition, we placed all queens:
		if (n >= NR_OF_QUEENS) {
		return true;
		}
		boolean[][] tmp = markThreatenedFields();
		// every possible choice among the columns in this row
		for (int i = 0; i < NR_OF_QUEENS; i++) {
		// check if point is safe
		if (isSafe(i, n, tmp)) {
		queens[n] = new Point(i, n);
		if (placeQueen(n + 1)) {
		return true;
		} else {
		queens[n] = null;
		
		}
		}
		}
		return false;
	}
	
	private boolean isSafe(int x, int y, boolean[][] tmp) {
		return !tmp[x][y];
		}
	
}
